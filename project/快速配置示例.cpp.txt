// 快速配置示例 - 适配不同物品分类任务
// 只需修改以下几处代码即可切换到任何物品分类

// ==========================================
// 1. 修改 train.cpp 中的数据路径
// ==========================================

// 原始狗品种配置：
std::string images_dir = "F:/source/Project/Cpp/Image_Recognition_OpenCV/resource/low-resolution";
std::string annotations_dir = "F:/source/Project/Cpp/Image_Recognition_OpenCV/resource/low-annotations";

// 切换到水果分类：
std::string images_dir = "F:/MyProject/fruit_dataset/images";
std::string annotations_dir = "F:/MyProject/fruit_dataset/annotations";

// 切换到工业零件检测：
std::string images_dir = "F:/IndustryAI/parts_dataset/images";
std::string annotations_dir = "F:/IndustryAI/parts_dataset/annotations";

// 切换到服装分类：
std::string images_dir = "F:/FashionAI/clothes_dataset/images";
std::string annotations_dir = "F:/FashionAI/clothes_dataset/annotations";

// ==========================================
// 2. 修改 predict.cpp 中的测试路径（性能评估时使用）
// ==========================================

// 在 predict.cpp 的 run_test 分支中：
std::string images_dir = "你的数据集路径/images";
std::string annotations_dir = "你的数据集路径/annotations";

// ==========================================
// 3. 数据集目录结构示例
// ==========================================

/*
水果分类数据集结构：
MyProject/fruit_dataset/
├── images/
│   ├── 苹果/
│   │   ├── apple_001.jpg
│   │   ├── apple_002.jpg
│   │   └── ...
│   ├── 香蕉/
│   │   ├── banana_001.jpg
│   │   └── ...
│   ├── 橙子/
│   └── 葡萄/
└── annotations/
    ├── 苹果/
    │   ├── apple_001.xml
    │   └── ...
    ├── 香蕉/
    └── ...

工业零件数据集结构：
IndustryAI/parts_dataset/
├── images/
│   ├── 螺丝/
│   ├── 垫片/
│   ├── 弹簧/
│   └── 缺陷件/
└── annotations/
    └── ...

服装分类数据集结构：
FashionAI/clothes_dataset/
├── images/
│   ├── T恤/
│   ├── 牛仔裤/
│   ├── 连衣裙/
│   ├── 外套/
│   └── 运动鞋/
└── annotations/
    └── ...
*/

// ==========================================
// 4. XML标注文件示例
// ==========================================

/*
水果标注示例 (apple_001.xml)：
<annotation>
    <filename>apple_001.jpg</filename>
    <size>
        <width>640</width>
        <height>480</height>
    </size>
    <object>
        <name>main_region</name>      <!-- 主要水果区域 -->
        <bndbox>
            <xmin>150</xmin>
            <ymin>100</ymin>
            <xmax>500</xmax>
            <ymax>380</ymax>
        </bndbox>
    </object>
</annotation>

工业零件标注示例 (screw_001.xml)：
<annotation>
    <filename>screw_001.jpg</filename>
    <size>
        <width>800</width>
        <height>600</height>
    </size>
    <object>
        <name>screw_head</name>       <!-- 螺丝头部 -->
        <bndbox>
            <xmin>300</xmin>
            <ymin>200</ymin>
            <xmax>500</xmax>
            <ymax>400</ymax>
        </bndbox>
    </object>
    <object>
        <name>screw_thread</name>     <!-- 螺纹部分 -->
        <bndbox>
            <xmin>350</xmin>
            <ymin>400</ymin>
            <xmax>450</xmax>
            <ymax>550</ymax>
        </bndbox>
    </object>
</annotation>

服装标注示例 (tshirt_001.xml)：
<annotation>
    <filename>tshirt_001.jpg</filename>
    <size>
        <width>600</width>
        <height>800</height>
    </size>
    <object>
        <name>collar</name>           <!-- 领口区域 -->
        <bndbox>
            <xmin>200</xmin>
            <ymin>50</ymin>
            <xmax>400</xmax>
            <ymax>150</ymax>
        </bndbox>
    </object>
    <object>
        <name>pattern</name>          <!-- 图案区域 -->
        <bndbox>
            <xmin>100</xmin>
            <ymin>200</ymin>
            <xmax>500</xmax>
            <ymax>500</ymax>
        </bndbox>
    </object>
</annotation>
*/

// ==========================================
// 5. 使用流程（完全相同）
// ==========================================

/*
步骤1：准备数据
- 按类别组织图片文件
- 制作XML标注文件（可选但推荐）

步骤2：修改路径
- 修改train.cpp中的images_dir和annotations_dir
- 修改predict.cpp中的测试路径

步骤3：编译运行
mkdir build && cd build
cmake .. && make

步骤4：训练模型
./train              # 优化版训练
./train --basic      # 基础版训练

步骤5：测试预测
./predict test_image.jpg    # 预测单张图片
./predict --test           # 性能评估

步骤6：分析结果
- 查看识别准确率
- 分析每类别表现
- 根据结果调优数据集
*/

// ==========================================
// 6. 针对不同物品的优化建议
// ==========================================

/*
食品/水果分类优化：
- 重点标注特征区域（果皮纹理、形状轮廓）
- 增加光照变化的数据增强
- 使用较小的HOG窗口捕捉细节

工业零件检测优化：
- 精确标注关键几何特征
- 减少不必要的数据增强（保持形状一致性）
- 增加缺陷样本的训练数据

服装分类优化：
- 标注款式特征区域（领口、袖口、图案）
- 最大化旋转和变形的数据增强
- 使用多尺度特征捕捉不同层次信息

医学影像分析优化：
- 精确标注病变区域
- 谨慎使用数据增强（避免改变医学特征）
- 增加边界模糊样本提升鲁棒性
*/

// ==========================================
// 7. 快速验证清单
// ==========================================

/*
数据准备检查：
□ 每个类别至少50张图片
□ 图片清晰度足够
□ 类别目录命名正确
□ XML标注文件格式正确

代码配置检查：
□ images_dir路径正确
□ annotations_dir路径正确
□ 路径使用正斜杠或双反斜杠
□ 目录确实存在

运行环境检查：
□ OpenCV库正确安装
□ 编译无错误
□ 可执行文件生成成功
□ 有足够的磁盘空间存储模型

效果评估检查：
□ 训练完成无错误
□ 模型文件成功生成
□ 测试预测结果合理
□ 准确率达到预期
*/